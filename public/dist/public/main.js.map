{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add/add.component.css","webpack:///./src/app/add/add.component.html","webpack:///./src/app/add/add.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/edit/edit.component.css","webpack:///./src/app/edit/edit.component.html","webpack:///./src/app/edit/edit.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/review/review.component.css","webpack:///./src/app/review/review.component.html","webpack:///./src/app/review/review.component.ts","webpack:///./src/app/reviews/reviews.component.css","webpack:///./src/app/reviews/reviews.component.html","webpack:///./src/app/reviews/reviews.component.ts","webpack:///./src/app/show/show.component.css","webpack:///./src/app/show/show.component.html","webpack:///./src/app/show/show.component.ts","webpack:///./src/app/showreviews/showreviews.component.css","webpack:///./src/app/showreviews/showreviews.component.html","webpack:///./src/app/showreviews/showreviews.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"a{\\r\\n\\tcolor: white !important;\\r\\n}\"","module.exports = \"<div class=\\\"col\\\">\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col\\\">\\n\\t\\t\\t<h5>Submit a movie and your review</h5>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col\\\">\\n\\t\\t\\t<form (submit)=\\\"createMovie()\\\">\\n\\t\\t\\t\\t<!-- front end val - disables button until valid data entered -->\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<p> {{ messages | json }} </p>\\n\\t\\t\\t\\t<p> {{ movie | json }} </p>\\n\\n\\t\\t<!-- front end val -->\\n\\t\\t\\t\\t<div *ngIf=\\\"!title.valid && (title.dirty || title.touched)\\\">\\n\\t\\t\\t\\t\\t<span class=\\\"text-danger\\\" *ngIf=\\\"title.errors.required\\\">Title is required</span>\\n\\t\\t\\t\\t\\t<span class=\\\"text-danger\\\" *ngIf=\\\"title.errors.minlength\\\">Title must be greater than 2 characters</span>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t<!-- back end val - -->\\n\\t\\t\\t\\t<span class=\\\"text-danger\\\" *ngIf=\\\"messages.title\\\">{{ messages.title }}</span>\\n\\t\\t\\t\\t<span class=\\\"text-success\\\" *ngIf=\\\"message\\\">{{ message }}</span>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\n\\t\\t\\t\\t\\t<label class=\\\"col-3\\\" path=\\\"title\\\">Movie Title:</label>\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" required minlength=\\\"3\\\" name=\\\"movie.title\\\" #title=\\\"ngModel\\\" [(ngModel)]=\\\"movie.title\\\" />\\n\\t\\t\\t\\t</div>\\n\\t\\t<!-- front end val -->\\n\\t\\t\\t\\t<div *ngIf=\\\"!name.valid && (name.dirty || name.touched)\\\">\\n\\t\\t\\t\\t\\t<span class=\\\"text-danger\\\" *ngIf=\\\"name.errors.required\\\">Name is required</span>\\n\\t\\t\\t\\t\\t<span class=\\\"text-danger\\\" *ngIf=\\\"name.errors.minlength\\\">Name must be greater than 2 characters</span>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t<!-- back end val - -->\\n\\t\\t\\t\\t<span class=\\\"text-danger\\\" *ngIf=\\\"messages.name\\\">{{ messages.name }}</span>\\n\\t\\t\\t\\t<span class=\\\"text-success\\\" *ngIf=\\\"message\\\">{{ message }}</span>\\n\\n\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\n\\t\\t\\t\\t\\t<label class=\\\"col-3\\\" path=\\\"name\\\">Your name:</label>\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" required minlength=\\\"3\\\" name=\\\"movie.name\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"movie.name\\\" />\\n\\t\\t\\t\\t</div>\\n\\t\\t<!-- back end val - -->\\n\\t\\t\\t\\t<span class=\\\"text-danger\\\" *ngIf=\\\"messages.name\\\">{{ messages.rating }}</span>\\n\\t\\t\\t\\t<span class=\\\"text-success\\\" *ngIf=\\\"message\\\">{{ message }}</span>\\n\\n\\n\\t\\t\\t\\t<div class=\\\"form-group col-6\\\">\\n\\t\\t\\t\\t\\t<label for=\\\"rating\\\">Stars:</label>\\n\\t\\t\\t\\t\\t<select class=\\\"form-control\\\" id=\\\"rating\\\" name=\\\"movie.rating\\\" [(ngModel)]=\\\"movie.rating\\\">\\n\\t\\t\\t\\t\\t\\t<option value=\\\"1\\\">1 star</option>\\n\\t\\t\\t\\t\\t\\t<option value=\\\"2\\\">2 stars</option>\\n\\t\\t\\t\\t\\t\\t<option value=\\\"3\\\">3 stars</option>\\n\\t\\t\\t\\t\\t\\t<option value=\\\"4\\\">4 stars</option>\\n\\t\\t\\t\\t\\t\\t<option value=\\\"5\\\">5 stars</option>\\n\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t</div>\\n\\t\\t<!-- front end val -->\\n\\t\\t\\t\\t<div *ngIf=\\\"!initReview.valid && (initReview.dirty || initReview.touched)\\\">\\n\\t\\t\\t\\t\\t<span class=\\\"text-danger\\\" *ngIf=\\\"initReview.errors.required\\\">Review is required</span>\\n\\t\\t\\t\\t\\t<span class=\\\"text-danger\\\" *ngIf=\\\"initReview.errors.minlength\\\">Review must be greater than 2 characters</span>\\n\\t\\t\\t\\t</div>\\n\\t\\t<!-- back end val - -->\\n\\t\\t\\t\\t<span class=\\\"text-danger\\\" *ngIf=\\\"messages.name\\\">{{ messages.initReview}}</span>\\n\\t\\t\\t\\t<span class=\\\"text-success\\\" *ngIf=\\\"message\\\">{{ message }}</span>\\n\\n\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\n\\t\\t\\t\\t\\t<label class=\\\"col-3\\\">Your review:</label>\\n\\t\\t\\t\\t\\t<!-- <input type=\\\"text\\\" name=\\\"movie.initReview\\\"[(ngModel)]=\\\"movie.initReview\\\"/> -->\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" required minlength=\\\"3\\\" name=\\\"movie.initReview\\\" #initReview=\\\"ngModel\\\" [(ngModel)]=\\\"movie.initReview\\\" />\\n\\t\\t\\t\\t</div>\\n\\t\\t<!-- front end val - button disabled until fully valid data entered -->\\n\\t\\t\\t\\t<input [disabled]=\\\"!title.valid\\\" class=\\\"btn btn-primary btn-sm\\\" type=\\\"submit\\\" value=\\\"Submit\\\"/>\\n\\t\\t\\t\\t<a (click)=\\\"triggerEvent($event)\\\" class=\\\"btn btn-primary btn-sm\\\" >Cancel</a>\\n\\t\\t\\t\\t<a (click)=\\\"triggerEvent($event)\\\" class=\\\"btn btn-primary btn-sm\\\" >Invoke</a>\\n\\t\\t\\t\\t\\n\\t\\t\\t</form>\\n\\t\\t</div>\\n\\t</div>\\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { HttpService } from '../http.service';\nimport { Movie } from '../../../../server/models/movie.js';\n\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.css']\n})\nexport class AddComponent implements OnInit {\n\t@Input() myMovies: Movie[];\n\t@Output() movieEventEmitter = new EventEmitter();\n\tid: any;\n\ttitle: 'Add Movie and Review';\n\tmovie: any;\n\treview: any;\n\tmessage: any;\n\tmessages: any;\n\tappAdd: boolean;\n\n\tconstructor(\n\t\tprivate _route: ActivatedRoute,\n\t\tprivate _router: Router,\n\t\tprivate _httpService: HttpService\n\t\t) { }\n\n\tngOnInit() {\n\t\tthis.movie = {title: \"\", name: \"\"};\n\t\tthis.review = {name: \"\", comment: \"\", rating: 0};\n\t\tthis.messages = { success: \"\", name: \"\" };\n\t\tthis.appAdd = true;\n\t\tthis._route.params.subscribe((params: Params) => {\n\t\t\tthis.id = params.id;\n\t\t//\tconsole.log(\"79 params.id = \",params.id,\" params['id'] = \",params['id']);\n\t\t});\n\t}\n\n\tcreateMovie(movie){\n\t\tlet obs = this._httpService.createMovie(this.movie);\n\t\tobs.subscribe(response => {\n\t\t\tif (response['status'] == false) {\n\t\t\t\tthis.messages = response['messages'];\n\t\t\t} else {\n\t\t\t\tif (response['status']==true) {\n\t\t\t\t\tthis.message = response['messages'][\"success\"];\n\t\t\t\t\tthis.showMovies()\n\t\t\t\t\tthis.movie = {title: \"\", name: \"\", initReview: \"\"};\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tshowMovies(){\n\t//\tconsole.log(\"82 add.c.ts showMovies()\")\n\t\tthis.appAdd = false;\n\t\tthis._router.navigate(['/show']);\n\t}\n\n\ttriggerEvent(){\n\t\tthis.appAdd = false\n\t\tthis.movieEventEmitter.emit(this.appAdd); \n\t}\n\n\t\n\n\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ShowComponent } from './show/show.component';\nimport { AddComponent } from './add/add.component';\nimport { EditComponent } from './edit/edit.component';\nimport { ReviewComponent } from './review/review.component';\nimport { ReviewsComponent } from './reviews/reviews.component';\nimport { ShowreviewsComponent } from './showreviews/showreviews.component';\n\nconst routes: Routes = [\n\t{ path: '', component: ShowComponent },\n\t{ path: 'show', component: ShowComponent },\n\t{ path: 'reviews/:id', component: ReviewsComponent },\n\t{ path: 'add', component: AddComponent },\n\t{ path: 'edit', component: EditComponent },\n\t{ path: 'review', component: ReviewComponent },\n\t{ path: 'showreviews/:id', component: ShowreviewsComponent },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"\\n<div class=\\\"container\\\">\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col\\\">\\n\\t\\t\\t<h1 class=\\\"text-align: center\\\">Squishy Tomatoes</h1>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col\\\">\\n\\t\\t\\t<router-outlet></router-outlet>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n\\n\\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from './http.service';\nimport { NgForm } from '@angular/forms'\n\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\ttitle = 'Squishy Tomatoes';\n\tmovie: any;\n\tmovies = [];\n\tselectedMovie: any;\n\tviewMovie = true;\n\treview: any;\n\treviews = [];\n\tselectedReview: any;\n\tviewReview = true;\n\tmessages: any;\n\n\tconstructor(private _httpService: HttpService){}\n\n\tngOnInit() {\n\t\t\n\n\t\t}\n\n\t\t\n\t}\n\t\n\t\t\n\t\n\t\n\t//createAuthor\n\t\n\t\n\t\n\t//getAllAuthors\n\t\n\n\n\t\n\t//showAuthor\n\t\n\t\n\t\n\t\n\t//authorToShow\n\t\n\t\n\n\n\t\n\t//editAuthor\n\t\n\t\n\t\n\t\n\t\n\t//updateAuthor\n\t\n\t\n\t\n\t\n\t\n\t//deleteAuthor\n\n\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpService } from './http.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ShowComponent } from './show/show.component';\nimport { AddComponent } from './add/add.component';\nimport { EditComponent } from './edit/edit.component';\nimport { ReviewComponent } from './review/review.component';\nimport { ReviewsComponent } from './reviews/reviews.component';\nimport { ShowreviewsComponent } from './showreviews/showreviews.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ShowComponent,\n    AddComponent,\n    EditComponent,\n\tReviewComponent,\n\tReviewsComponent,\n\tShowreviewsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n\tHttpClientModule,\n\tFormsModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  edit works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n\tconstructor(private _http: HttpClient) { \n\n\t}\n\n\t//createmovie \n\tcreateMovie(movie){\n\t\treturn this._http.post('/movies', movie);\n\t}\n\n\t//\tgetmovies\n\tgetAllMovies(){\n\t\treturn this._http.get('/movies');\n\t}\n\n\n\t// getMovie\n\tgetMovie(id){\n\t//\tconsole.log(\"100 service.ts getMovie().  id = \",id)\n\t\treturn this._http.get('/movies/'+id);\n\t}\n\t\n\t//updatemovie\n\t\n\t\n\t\n\t//deleteMovie \n\tdeleteMovie(id){\n\t//\tconsole.log(\"110 service.ts deleteMovie().  id = \",id)\n\t\treturn this._http.delete('/movies/'+id);\n\t}\n\n\t// createReview\n\tcreateReview(data){\n\t\tconsole.log(\"110 service.js createReview(data).  data = \",data)\n\t\treturn this._http.post('/movies/'+data.id+'/reviews', data.review);\n\t}\n\n\t\n\t//\tdeleteReview\n\tdeleteReview(movieId, reviewId){\n\t\tconsole.log(\"120 service.js deleteReview movieId = \",movieId,\" reviewId = \",reviewId)\n\t\treturn this._http.delete('/movies/'+movieId+'/reviews/'+reviewId);\n\n\t}\n\n\n}\n\n\n","module.exports = \"\"","module.exports = \"<p>\\n  review works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-review',\n  templateUrl: './review.component.html',\n  styleUrls: ['./review.component.css']\n})\nexport class ReviewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"a{\\r\\n\\tcolor: white !important;\\r\\n}\"","module.exports = \"\\n\\n<div class=\\\"col\\\">\\n\\t\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col\\\">\\n\\t\\t\\t<h5 *ngIf=\\\"movie\\\">Add a review for {{movie.title}}</h5>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\n\\t<!-- from Med - front and back end validation -->\\n\\n\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col\\\">\\n\\t\\t\\t<form (submit)=\\\"createReview()\\\">\\n\\n\\t\\t\\t\\t<!-- front end val - disables button until valid data entered\\n\\t\\t\\t\\tback end val - after user clicks button will display success message or errors if any -->\\n\\n\\t\\t\\t\\t<p> {{ revMessages | json }} </p>\\n\\t\\t\\t\\t<p> {{ review | json }} </p>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<div *ngIf=\\\"!name.valid && (name.dirty || name.touched)\\\">\\n\\t\\t\\t\\t\\t<span class=\\\"text-danger\\\" *ngIf=\\\"name.errors.required\\\">name is required</span>\\n\\t\\t\\t\\t\\t<span class=\\\"text-danger\\\" *ngIf=\\\"name.errors.minlength\\\">name must be greater than 2 characters</span>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<span class=\\\"text-danger\\\" *ngIf=\\\"revMessages.name\\\">{{ revMessages.name }}</span>\\n\\t\\t\\t\\t<span class=\\\"text-success\\\" *ngIf=\\\"revMessage\\\">{{ revMessage }}</span>\\n\\n\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\n\\t\\t\\t\\t\\t<label class=\\\"col-3\\\" path=\\\"name\\\">Your name:</label>\\n\\t\\t\\t\\t\\t<!-- <input type=\\\"text\\\" name=\\\"review.name\\\"  [(ngModel)]=\\\"review.name\\\" /> -->\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" required minlength=\\\"3\\\" name=\\\"review.name\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"review.name\\\" />\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<span class=\\\"text-danger\\\" *ngIf=\\\"revMessages.rating\\\">{{ revMessages.rating }}</span>\\n\\t\\t\\t\\t<span class=\\\"text-success\\\" *ngIf=\\\"message\\\">{{ revMessage }}</span>\\n\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<div class=\\\"form-group col-6\\\">\\n\\t\\t\\t\\t\\t\\t<label for=\\\"rating\\\">Stars:</label>\\n\\t\\t\\t\\t\\t\\t<select class=\\\"form-control\\\" id=\\\"rating\\\" name=\\\"review.rating\\\" [(ngModel)]=\\\"review.rating\\\">\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"1\\\">1 star</option>\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"2\\\">2 stars</option>\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"3\\\">3 stars</option>\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"4\\\">4 stars</option>\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"5\\\">5 stars</option>\\n\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"!comment.valid && (comment.dirty || comment.touched)\\\">\\n\\t\\t\\t\\t\\t\\t<span class=\\\"text-danger\\\" *ngIf=\\\"comment.errors.required\\\">comment is required</span>\\n\\t\\t\\t\\t\\t\\t<span class=\\\"text-danger\\\" *ngIf=\\\"comment.errors.minlength\\\">comment must be greater than 2 characters</span>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<span class=\\\"text-danger\\\" *ngIf=\\\"revMessages.comment\\\">{{ revMessages.comment }}</span>\\n\\t\\t\\t\\t\\t<span class=\\\"text-success\\\" *ngIf=\\\"revMessage\\\">{{ revMessage }}</span>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\n\\t\\t\\t\\t\\t\\t<label class=\\\"col-3\\\">Your review:</label>\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" required minlength=\\\"3\\\" name=\\\"review.comment\\\" #comment=\\\"ngModel\\\" [(ngModel)]=\\\"review.comment\\\"/>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<!-- <input class=\\\"btn btn-primary btn-sm\\\" type=\\\"submit\\\" value=\\\"Submit\\\" /> -->\\n\\t\\t\\t\\t\\t<input [disabled]=\\\"!comment.valid\\\" class=\\\"btn btn-primary btn-sm\\\" type=\\\"submit\\\" value=\\\"Submit\\\"/>\\n\\t\\t\\t\\t\\t<a (click)=\\\"showReviewsPage(movie._id)\\\" class=\\\"btn btn-primary btn-sm\\\" >Cancel</a>\\n\\t\\t\\t</form>\\n\\t\\t</div>\\n\\t</div>\\n</div>\"","\n\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { HttpService } from '../http.service';\n\n@Component({\n  selector: 'app-reviews',\n  templateUrl: './reviews.component.html',\n  styleUrls: ['./reviews.component.css']\n})\nexport class ReviewsComponent implements OnInit {\n\ttitle: 'Create Review';\n\tid: any;\n\tmovie: any;\n\treview: any;\n\treviews: any;\n\tname: any;\n\tmessage: any;\n\tmessages: any;\n\trevMessage: any;\n\trevMessages: any;\n\tviewMovie: any;\n\tselectedMovie: any;\n\n\tconstructor(\n\t\tprivate _route: ActivatedRoute,\n\t\tprivate _router: Router,\n\t\tprivate _httpService: HttpService\n\t) { }\n\n\tngOnInit() {\n\t\tthis.review = {title: \"\", name: \"\", initReview: \"\"};\n\t\tthis.review = {name: \"\", comment: \"\", rating: 0};\n\t\tthis.messages = [\"\"];\n\t\tthis.revMessages = [\"\"];\n\t\tthis._route.params.subscribe((params: Params) => {\n\t\t\tconsole.log(\"1 ngOnInit.  _route.params = \",JSON.stringify(params));\n\t\t\tconsole.log(\"2 ngOnInit.  params['id'] = \",params['id']);\n\t\t\tconsole.log(\"3 calling this.getMovie()\");\n\t\t\tthis.getMovie(params['id']);\n\t\t\tthis.id = params.id;\n\t\t\tconsole.log(\"4 reviews.c.ts onInit() route params subscribe method. this.id= \",this.id);\n\t\t});\n\t\tthis._route.parent.params.subscribe(params => console.log(\"5 reviews.c.ts ngOnInit The parent params:\", JSON.stringify(params)))\n\t\tconsole.log(\"6 reviews.c.ts ngOnInit this.id = \",this.id)\n\t\tthis.getMovie(this.id)\n\t//\tthis.showReviews(this.id);\n\t}\t\n\n\tgetMovie(id){\n\t\tconsole.log(\"10 in reviews.c.ts getMovie()\");\n\t\tlet movie = this._httpService.getMovie(id);\n\t\tmovie.subscribe(data => {\n\t\t\tconsole.log(\"11 reviews.c.ts getMovie. post response  data = \",data)\n\t\t\tthis.movie = data['data'];\n\t\t\tconsole.log(\"12 reviews.c.ts getMovie.  this.movie = \",this.movie)\n\t\t\t\n\t\t})\n\t}\n\n\tcreateReview(){\n\t\tconsole.log(\"20 in reviews.c.ts createReview(). this.id= \",this.id);\n\t\tlet rev = this._httpService.createReview({ \"id\": this.id, \"review\": this.review });\n\t\trev.subscribe(response => {\n\t\t\tconsole.log(\"21 reviews.c.ts createReview. post response  data = \",response)\n\n\t\t\tif (response['status'] == false) {\n\t\t\t\tthis.revMessages = response['revMessages'];\n\t\t\t} else {\n\t\t\t\tif (response['status']==true) {\n\t\t\t\t\tthis.message = response['message'];\n\t\t\t\t\tthis.showReviewsPage(this.id);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t//\tthis.review = {name: \"\", comment: \"\", rating: 0};\n\t\t\t\n\t\t})\n\t}\n\n\tshowReviewsPage(id){\n\t\tconsole.log(\"30 reviews.c.ts in showReviewsPage method\")\n\t\tthis._router.navigate(['/showreviews/'+id]);\n\t}\n\n\n\n\n\n\n}\n\n","module.exports = \"a{\\r\\n\\tcolor: white !important;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n\\t<div class=\\\"col\\\">\\n\\t\\t<button (click)=\\\"appAdd=!appAdd\\\" class=\\\"btn btn-primary btn-sm m-3\\\">Add a new movie</button>\\n\\t\\t<app-add *ngIf=\\\"appAdd\\\"></app-add>\\n\\t</div>\\n</div>\\n<div class=\\\"row\\\">\\n\\t<div class=\\\"col m-3 \\\">\\n\\t\\t<h4>Movie List:</h4>\\n\\t</div>\\n</div>\\n\\n<div class=\\\"row m-2\\\">\\n\\t<div class=\\\"col\\\">\\n\\t\\t<table class=\\\"table table-striped\\\">\\n\\t\\t\\t<thead>\\n\\t\\t\\t\\t<th scope=\\\"col\\\">Movie Title</th>\\n\\t\\t\\t\\t<th scope=\\\"col\\\">Average Rating</th>\\n      \\t\\t\\t<th scope=\\\"col\\\">Actions</th>\\n\\t\\t\\t\\t\\n\\t\\t\\t</thead>\\n\\t\\t\\t<tbody>\\n\\t\\t\\t\\t<!-- <tr>\\n\\t\\t\\t\\t\\t<td>Movie Title:</td>\\n\\t\\t\\t\\t\\t<td>Actions:</td>\\n\\t\\t\\t\\t</tr> -->\\n\\t\\t\\t\\t<tr *ngFor=\\\"let movie of movies\\\">\\n\\t\\t\\t\\t\\t<td class=\\\"mr-3\\\">{{movie[\\\"title\\\"]}}</td><td class=\\\"mr-3\\\">{{movie[\\\"avgRating\\\"]}}</td><td><button (click)=\\\"showReviews(movie._id)\\\" class=\\\"btn btn-primary btn-sm m-x-2\\\">Read Reviews</button><button (click)=\\\"showWriteReview(movie._id)\\\" class=\\\"btn btn-primary btn-sm\\\">Write Review</button>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t</tbody>\\n\\t\\t</table>\\n\\t</div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { HttpService } from '../http.service';\n\nimport { Movie } from '../../../../server/models/movie.js';\n\n@Component({\n  selector: 'app-show',\n  templateUrl: './show.component.html',\n  styleUrls: ['./show.component.css']\n})\nexport class ShowComponent implements OnInit {\n\tid: any;\n\ttitle: 'Add movie';\n\treview: any;\n\treviews: any;\n\tmovie: any;\n\tmovies: any;\n\tname: any;\n\tmessage: any;\n\tmessages: any;\n\tviewMovie: any;\n\tselectedMovie: any;\n\tappAdd: boolean;\n\n\tconstructor(\n\t\tprivate _route: ActivatedRoute,\n\t\tprivate _router: Router,\n\t\tprivate _httpService: HttpService\n\t) { }\n\n\tngOnInit() {\n\t\tthis.selectedMovie = \"\";\n\t\tthis._route.params.subscribe((params: Params) => {\n\t\t//\tconsole.log(params['id']);\n\t\t});\n\t\tthis.appAdd = false;\n\t\tthis.showMovies();\n\t\t\n\t}\n\n\tgoHome() {\n\t\tthis._router.navigate(['/']);\n\t}\n\n\tfunctionFromChild(eventData){\n\t\tconsole.log(\"100 show.c.ts dataFromChild.  eventData = \",eventData);\n\t\tthis.appAdd = eventData;\n\t\tthis.ngOnInit();\n\t}\n\n//\tshowMovie(id: String){\n\tshowMovie(id){\n\t//\tconsole.log(\"in show.c.ts movieToShow.  id = \",id)\n\t\tlet movie = this._httpService.getMovie(id);\n\t\tmovie.subscribe(data => {\n\t\t\tthis.movie = data['data'];\n\t\t//\tconsole.log(\"this.movieToShow.title = \",this.selectedMovie.title)\n\t\t\t\n\t\t})\n\t}\n\n\tshowMovies(){\n\t\tconsole.log(\"155 show.c.ts showMovies(). appAdd = \",this.appAdd);\n\t\tlet movies = this._httpService.getAllMovies();\n\t\tmovies.subscribe(data => {\n\t\t//\tconsole.log(\"show.c.ts showMovies. post response  data = \",data)\n\t\t\tthis.movies = data['movies'];\n\t\t//\tconsole.log(\"show.c.ts showMovies.  this.movies = \",this.movies)\n\t\t\t\n\t\t\tfor (var i = 0; i < this.movies.length; i++){\n\t\t\t\tvar avgRating = 0;\n\t\t\t\tvar sum = 0;\n\t\t\t\tvar numRevs = 0;\n\t\t\t\tvar revVal = 0;\n\t\t//\t\tconsole.log(\"i = \",i,\" this.movies[i].title = \",this.movies[i].title);\n\t\t\t\tnumRevs = this.movies[i].reviews.length;\n\t\t//\t\tconsole.log(\"numRevs = this.movies[i].reviews.length-1 = \",numRevs);\n\n\t\t\t\tif (numRevs > 0){\n\t\t\t\t\tfor (var j = 0; j < numRevs; j++){\n\t\t\t\t\t\trevVal = this.movies[i].reviews[j].rating;\n\t\t//\t\t\t\tconsole.log(\"revVal = \",revVal);\n\t\t\t\t\t\tsum += revVal;\n\t\t//\t\t\t\tconsole.log(\"j = \",j,\" sum = \",sum);\n\t\t\t\t\t}\n\t\t\t\t\tavgRating = sum / numRevs;\n\t\t//\t\t\tconsole.log(\"avgRating = \",avgRating);\n\n\t\t\t\t} else {\n\t\t\t\t\tavgRating = 0;\n\t\t\t\t}\n\t\t\t\tthis.movies[i].avgRating = avgRating;\n\t\t//\t\tconsole.log(\"this.movies[i].avgRating = \",this.movies[i].avgRating);\n\t\t//\t\tconsole.log(\"final avgRating for \",this.movies[i].title,\" = \",avgRating);\n\t\t\t\tsum = 0;\n\t\t\t\tavgRating = 0;\n\t\t\t\t\t\n\t\t\t}\n\t\t//\tconsole.log('this.movies = ',this.movies)\n\t\t\t\n\t\t})\n\t}\n\n\n\tshowAddMovie(){\n\t\t// this._router.navigate(['/add']);\n\t\tthis.appAdd = true;\n\n\n\t}\n\n\tshowReviews(id){\n\t\tthis.showMovie(id);\n\t\tthis._router.navigate(['/showreviews/'+id]);\n\n\t}\n\n\tshowWriteReview(id){\n\t//\tconsole.log(\"show.c.ts passed id = \",id)\n\t\tthis._router.navigate(['/reviews/'+id]);\n\t}\n\n\n\n}\n","module.exports = \"a{\\r\\n\\tcolor: white !important;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n\\t<div class=\\\"col m-3 \\\">\\n\\t\\t<button (click)=\\\"deleteMovie(movie._id)\\\" class=\\\"btn btn-danger btn-sm m-3\\\">Delete Movie</button>\\n\\t\\t<button (click)=\\\"showMovies()\\\" class=\\\"btn btn-primary btn-sm m-3\\\">Show Movies</button>\\n\\t</div>\\n</div>\\n<div class=\\\"row\\\">\\n\\t<div class=\\\"col m-3 \\\">\\n\\t\\t<h4>Reviews for {{movie.title}}</h4>\\n\\t</div>\\n</div>\\n\\n<div class=\\\"row m-2\\\">\\n\\t<div class=\\\"col\\\">\\n\\t\\t<table class=\\\"table table-striped\\\">\\n\\t\\t\\t<thead>\\n\\t\\t\\t\\t<th scope=\\\"col\\\">Reviewer</th>\\n      \\t\\t\\t<th scope=\\\"col\\\">Stars</th>\\n      \\t\\t\\t<th scope=\\\"col\\\">Reviews</th>\\n\\t\\t\\t\\t\\n\\t\\t\\t</thead>\\n\\t\\t\\t<tbody>\\n\\t\\t\\t\\t<tr *ngFor=\\\"let review of reviews\\\">\\n\\t\\t\\t\\t\\t<td class=\\\"mr-4\\\">{{review[\\\"name\\\"]}}</td><td class=\\\"mr-2\\\">{{review[\\\"rating\\\"]}}</td><td class=\\\"mr-6\\\">{{review[\\\"comment\\\"]}}</td><td><button (click)=\\\"deleteReview(movie._id, review._id)\\\" class=\\\"btn btn-primary btn-sm m-x-2\\\">Delete</button>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t</tbody>\\n\\t\\t</table>\\n\\t</div>\\n</div>\\n\"","\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { HttpService } from '../http.service';\n\n@Component({\n  selector: 'app-showreviews',\n  templateUrl: './showreviews.component.html',\n  styleUrls: ['./showreviews.component.css']\n})\nexport class ShowreviewsComponent implements OnInit {\n\ttitle: 'Show Reviews';\n\tid: any;\n\tmovie: any;\n\treview: any;\n\treviews: any;\n\tname: any;\n\tmessage: any;\n\tmessages: any;\n\tviewMovie: any;\n\tselectedMovie: any;\n\n\tconstructor(\n\t\tprivate _route: ActivatedRoute,\n\t\tprivate _router: Router,\n\t\tprivate _httpService: HttpService\n\t) { }\n\n\tngOnInit() {\n\t\tthis.review = {name: \"\", comment: \"\", rating: 0};\n\t\tthis.movie = {title: \"\", name: \"\"};\n\t\tthis._route.params.subscribe((params: Params) => {\n\t\t\tconsole.log(\"30 showrevs onInit params[id] = \",params['id']);\n\t\t\tthis.id = params.id;\n\t\t});\n\t//\tconsole.log(\"40 showrevs.c.ts ngOnInit b4 getMovie.  this.id = \",this.id)\n\t\tthis.getMovie(this.id)\n\t\tthis.showReviews(this.id);\n\t}\t\n\n\tshowReviews(id){\n\t//\tconsole.log(\"50 showrevs.c.ts showReviews(). id = \",id);\n\n\t\tlet title = this._httpService.getMovie(id);\n\t\ttitle.subscribe(movie => {\n\t\t\tconsole.log(\"55 showrevs.c.ts showRevs getMovie.  movie = \",movie);\n\t\t\tconsole.log(\"56 showrevs.c.ts showRevs getMovie.  movie['data']['reviews'] = \",movie['data']['reviews']);\n\t\t\tthis.reviews = movie['data']['reviews'];\n\t\t})\n\n\t}\n\n\tshowMovies(){\n\t\tconsole.log(\"60 showreviews.c.ts showMovies(). nav to /show\");\n\t\tthis._router.navigate(['/show']);\n\t}\n\n\tgetMovie(id){\n\t\tconsole.log(\"70 showreviews.c.ts getMovie(). id = \",id);\n\t\tlet movie = this._httpService.getMovie(id);\n\t\tmovie.subscribe(data => {\n\t\t\tconsole.log(\"71 showrevs.c.ts getMovie(). post response  data = \",data)\n\t\t\tthis.movie = data['data'];\n\t\t\tconsole.log(\"72 showrevs.c.ts getMovie().  this.movie = \",this.movie)\n\t\t\t\n\t\t})\n\t}\n\n\tdeleteMovie(id){\n\t\tconsole.log(\"75 showreviews.c.ts deleteMovie(). id = \",id);\n\t\tlet movie = this._httpService.deleteMovie(id);\n\t\tmovie.subscribe(data => {\n\t\t\tconsole.log(\"75 showrevs.c.ts deleteMovie(). post response  data = \",data)\n\t\t\t// this.movie = data['data'];\n\t\t\t// console.log(\"75 showrevs.c.ts deleteMovie().  this.movie = \",this.movie)\n\t\t\tthis.showMovies();\n\t\t})\n\t}\n\n\tdeleteReview(movieId, reviewId){\n\t\tconsole.log(\"80 showreviews.c.ts deleteReview(). reviewId = \",reviewId,\" movieId = \",movieId);\n\t\tlet delRev = this._httpService.deleteReview(movieId, reviewId);\n\t\tdelRev.subscribe(data => {\n\t\t\tconsole.log(\"75 showrevs.c.ts deleteReview(). post response  data = \",data)\n\t\t\t// this.movie = data['data'];\n\t\t\t// console.log(\"75 showrevs.c.ts deleteReview().  this.movie = \",this.movie)\n\t\t\tthis.showReviews(movieId);\n\t\t})\n\t}\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n"],"sourceRoot":""}